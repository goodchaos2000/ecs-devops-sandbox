name: Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-west-1                            # AWS Region
  ECR_REPOSITORY: ecs-devops-sandbox-repository    # ECR Repository name
  ECS_SERVICE: ecs-devops-sandbox-service          # ECS Service name
  ECS_CLUSTER: ecs-devops-sandbox-cluster          # ECS Cluster name
  ECS_TASK_DEFINITION: ./task-definition.json      # ✅ Full path to the task definition JSON
  CONTAINER_NAME: ecs-devops-sandbox               # ✅ Container name from task-definition.json

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: AKIATQPD7ROKFD6C2YUK
        aws-secret-access-key: 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
        aws-region: us-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}   # ✅ Uses the correct file path
        container-name: ${{ env.CONTAINER_NAME }}         # ✅ Uses the correct container name
        image: ${{ env.IMAGE_URI }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}  # ✅ Uses the correct updated task definition
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
